@model ML.Usuario
@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    input[type=text], input[type=date], input[type=number], input[type=password],
    input[type=email] {
        width: 100%;
        padding: 12px 20px;
        margin: 8px 0;
        box-sizing: border-box;
        border: none;
        border-bottom: 3px solid;
        border-block-color: rgb(170, 50, 220, .6);
    }

    #resultado {
        background-color: red;
        color: white;
        font-weight: bold;
    }

        #resultado.ok {
            background-color: green;
        }

    .centerDiv {
        margin: auto;
        width: 60%;
        padding: 10px;
    }
</style>

<div>    
    <div>
        @using (Html.BeginForm("Form", "Usuario", FormMethod.Post, new { @enctype = "multipart/form-data" }))
        {
            <div class="card">
                <div class="card-body">
                    <div class="text-center">
                        <h4>
                            <strong>
                                Datos personales
                            </strong>
                        </h4>
                    </div>
                    <br />

                    <div class="row">
                        <div class="col-4">
                            @Html.LabelFor(model => model.Nombre)
                            @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", @id = "nombre", @name = "nombre", @required = true, @placeholder = "Ingrese su nombre", @onkeypress = "SoloLetras(event)" })
                            <span style="color:red"class="error"></span>
                        </div>

                        <div class="col-4">
                            @Html.LabelFor(model => model.ApellidoPaterno)
                            @Html.TextBoxFor(model => model.ApellidoPaterno, new { @class = "form-control", @id = "apellidoPaterno", @name = "apellidoPaterno", @required = true, @placeholder = "Ingrese su apellido paterno", @onkeypress = "SoloLetras(event)" })
                            <span style="color:red" class="error"></span>
                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.ApellidoMaterno)
                            @Html.TextBoxFor(model => model.ApellidoMaterno, new { @class = "form-control", @id = "apellidoMaterno", @name = "apellidoMaterno", @placeholder = "Ingrese su apellido materno", @onkeypress = "SoloLetras(event)" })
                            <span style="color:red" class="error"></span>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-4">
                            @Html.LabelFor(model => model.CURP)
                            @Html.TextBoxFor(model => model.CURP, new { @class = "form-control", @id = "curp_input", @name = "curp", @placeholder = "Ingrese los 13 digitos de su CURP", @oninput = "validarInput(this)" })
                            <pre id="resultado"></pre>
                        </div>

                        <div class="col-4">
                            @Html.LabelFor(model => model.FechaNacimiento)
                            @*Html.TextBoxFor(model => model.FechaNacimiento, new { @class = "form-control", @type = "date", @id = "fechaNacimiento", @name = "fechaNacimiento", @required = true })*@
                            @Html.TextBoxFor(model => model.FechaNacimiento, new { @type = "text", @id = "datepicker" })
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-4">
                            @Html.LabelFor(model => model.Telefono)
                            @Html.TextBoxFor(model => model.Telefono, new { @class = "form-control", @type = "number", @id = "telefono", @name = "telefono", @required = true, @placeholder = "Digite su telefono", @onkeypress = "SoloNumeros(event)" })
                            <span style="color:red" class="error"></span>
                        </div>

                        <div class="col-4">
                            @Html.LabelFor(model => model.Celular)
                            @Html.TextBoxFor(model => model.Celular, new { @class = "form-control", @type = "number", @id = "celular", @name = "celular", @placeholder = "Digite su celular", @onkeypress = "SoloNumeros(event)" })
                            <span style="color:red" class="error"></span>
                        </div>
                    </div>
                </div>
            </div>

            <br />
            <div class="card">
                <div class="card-body">
                    <div class="text-center">
                        <h4>
                            <strong>
                                Información domiciliaria
                            </strong>
                        </h4>
                    </div>
                    <br />

                    <div class="row">
                        <div class="col-4">
                            @Html.LabelFor(model => model.Direccion.Calle)
                            @Html.TextBoxFor(model => model.Direccion.Calle, new { @class = "form-control", @type = "text", @id = "calle", @name = "calle", @placeholder = "Ingrese su calle" })
                        </div>
                        <div class="col-4">
                            @Html.LabelFor(model => model.Direccion.NumeroExterior)
                            @Html.TextBoxFor(model => model.Direccion.NumeroExterior, new { @class = "form-control", @type = "number", @id = "numeroExterior", @name = "numeroExterior", @placeholder = "Ingrese su numero exterior", @onkeypress = "SoloNumeros(event)" })
                            <span style="color:red" class="error"></span>
                        </div>
                        <div class="col-4">
                            @Html.LabelFor(model => model.Direccion.NumeroInterior)
                            @Html.TextBoxFor(model => model.Direccion.NumeroInterior, new { @class = "form-control", @type = "number", @placeholder = "Ingrese su numero interior", @onkeypress = "SoloNumeros(event)" })
                            <span style="color:red" class="error"></span>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-4">
                            @Html.LabelFor(model => model.Direccion.Colonia.Municipio.Estado.Estados)
                            @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.Estado.IdEstado, new SelectList(Model.Direccion.Colonia.Municipio.Estado.Estados, "IdEstado", "Nombre"), "Seleccione el estado", new { @class = "form-control text-center dropdown", @id = "ddlEstado", @onchange = "MunicipioGetByIdEstado()", @style = "border: 2px solid purple;" })
                        </div>
                        @if (Model.Direccion.Colonia.Municipio.Municipios == null)
                        {
                            <div class="col-4">
                                @Html.LabelFor(model => model.Direccion.Colonia.Municipio.Municipios)
                                @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.IdMunicipio, new SelectList(String.Empty), "Seleccione el municipio", new { @id = "ddlMunicipio", @onchange = "ColoniaGetByIdMunicipio()", @class = "form-control text-center dropdown", @style = "border: 2px solid purple;" })
                            </div>
                        }
                        else
                        {
                            <div class="col-4">
                                @Html.LabelFor(model => model.Direccion.Colonia.Municipio.Municipios)
                                @Html.DropDownListFor(model => model.Direccion.Colonia.Municipio.IdMunicipio, new SelectList(Model.Direccion.Colonia.Municipio.Municipios, "IdMunicipio", "Nombre"), "Seleccione el municipio", new { @class = "form-control text-center", @id = "ddlMunicipio", @onchange = "ColoniaGetByIdMunicipio()", @style = "border: 2px solid purple;" })
                            </div>
                        }
                        @if (Model.Direccion.Colonia.Colonias == null)
                        {
                            <div class="col-4">
                                @Html.LabelFor(model => model.Direccion.Colonia.Colonias)
                                @Html.DropDownListFor(model => model.Direccion.Colonia.IdColonia, new SelectList(String.Empty), "Seleccione la colonia", new { @id = "ddlColonia", @class = "form-control text-center", @style = "border: 2px solid purple;" })
                            </div>
                        }
                        else
                        {
                            <div class="col-4">
                                @Html.LabelFor(model => model.Direccion.Colonia.Colonias)
                                @Html.DropDownListFor(model => model.Direccion.Colonia.IdColonia, new SelectList(Model.Direccion.Colonia.Colonias, "IdColonia", "Nombre"), "Seleccione la colonia", new { @class = "form-control text-center", @id = "ddlColonia", @style = "border: 2px solid purple;" })
                            </div>
                        }
                    </div>

                </div>
            </div>

            <br />

            <div class="card">
                <div class="card-body">
                    <div class="text-center">
                        <h4>
                            <strong>
                                Datos para inicio de sesión
                            </strong>
                        </h4>
                    </div>
                    <br />
                    <div>
                        <div class="text-center">
                            @if (Model.Imagen == null)
                            {

                                <img class="center" id="img" src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSdnWgZDAdXZemvgse9Ky3sguQEMSeVUkxkcsk_ZFvu9uLsbaEAjdfBLamh7giYmG6vWZs&usqp=CAU" max-width="100" height="100">
                            }
                            else
                            {
                                <img src="data:image/*;base64,@Convert.ToBase64String(Model.Imagen)" class="avatar" width="100" height="100" />
                            }
                        </div>
                        <div class="row centerDiv">
                            <div class="col-6">
                                @Html.LabelFor(model => model.UserName)
                                @Html.TextBoxFor(model => model.UserName, new { @class = "form-control", @id = "username", @name = "username", @required = true, @placeholder = "Ingrese su usuario" })
                            </div>
                            <div class="col-6">
                                @Html.LabelFor(model => model.Email)
                                @Html.TextBoxFor(model => model.Email, new { @class = "form-control", type = "text", @id = "email", @name="email", @required = true, @placeholder = "example@gmail.com", @onblur = "ValidarEmail(this);" })
                                <span style="color:red" class="errorEmail" id="emailError"></span>
                            </div>                           
                        </div>
                        <div class="row centerDiv">
                            <div class="col-6">
                                @Html.LabelFor(model => model.Password)
                                @Html.TextBoxFor(model => model.Password, new { @class = "form-control", @type = "password", @id = "password", @name = "password", @required = true, @placeholder = "Ingrese su contraseña" })
                            </div>

                            <div class="col-6">
                                @Html.Label("Confirme su password")
                                @Html.TextBoxFor(model => model.Password, new { @class = "form-control", @type = "password", @id = "passwordconfirm", @name = "passwordconfirm", @required = true, @placeholder = "Confirme su contraseña" })
                                <span id='message'></span>
                            </div>
                        </div>
                        <div class="row">
                            @{
                                List<SelectListItem> Estatus = new List<SelectListItem>();
                                Estatus.Add(new SelectListItem
                                {
                                    Text = "Activo",
                                    Value = "True"
                                });
                                Estatus.Add(new SelectListItem
                                {
                                    Text = "Inactivo",
                                    Value = "False"
                                });
                            }
                            <div class="col-4">
                                @Html.LabelFor(model => model.Estatus)
                                @Html.DropDownListFor(model => model.Estatus, Estatus, new { @class = "form-control text-center", @style = "border: 2px solid purple;" })
                            </div>
                            <div class="col-4">
                                @Html.LabelFor(model => model.Rol.Roles)
                                @Html.DropDownListFor(model => model.Rol.IdRol, new SelectList(Model.Rol.Roles, "IdRol", "Nombre"), "Seleccione el rol", new { @class = "form-control text-center", @style = "border: 2px solid purple;" })
                            </div>
                            <div class="col-4">
                                @Html.LabelFor(model => model.Imagen)
                                @Html.TextBoxFor(model => model.Imagen, new { @class = "form-control", @type = "file", @id = "inptFileImagen", @placeholder = "Seleccione su Imagen", @accept = ".png", @onchange = "ValidarImagen(), VisualizarImagen(this), ValidarTamanio(this)" })
                            </div>
                        </div>

                    </div>

                </div>
            </div>


            <div class="row mt-4">
                <div class="col-md-6 text-center">
                    <button class="btn btn-outline-success" type="submit">Guardar</button>
                </div>
                <div class="col-md-6 text-center">
                    <a href="@Url.Action("GetAll", "Usuario")" class="btn btn-outline-warning" type="submit">Regresar</a>
                </div>
            </div>



                                }
    </div>
</div>

        @Scripts.Render("~/bundles/jquery")
        <link rel="stylesheet" href="https://code.jquery.com/ui/1.14.1/themes/base/jquery-ui.css">
        <link rel="stylesheet" href="/resources/demos/style.css">
        <script src="https://code.jquery.com/ui/1.14.1/jquery-ui.js"></script>
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
        <script>

        $("#datepicker").datepicker({
            dateFormat: "dd-mm-yy",
            showAnim: "clip"
        });

    function MunicipioGetByIdEstado(){
        let ddl = $('#ddlEstado').val();
         $.ajax({
         url: "@Url.Action("GetByIdEstado", "Usuario")?IdEstado="+ddl,
         type: "GET",
         dataType: "JSON",
         //data -> SOLO PARA MODELOS
         success: function (result)
         {
             if (result.Correct)
             {
                 //buscar donde pintare los valores
                 let ddlMunicipio = $('#ddlMunicipio');
                 let ddlColonia = $('#ddlColonia');
                 ddlMunicipio.empty();
                 ddlColonia.empty();
                 let municipioDefault = "<option value=0>Selecciona el municipio</option>";
                 let coloniaDefault = "<option value=0>Selecciona su colonia</option>";
                 ddlMunicipio.append(municipioDefault);
                 ddlColonia.append(coloniaDefault);
                 $.each(result.Objects, function (i, valor)
                 {
                     let option = "<option value=" + valor.IdMunicipio + ">" + valor.Nombre + "</option>";
                     ddlMunicipio.append(option);
                 })
             }
             ColoniaGetByIdMunicipio()
         },
         error: function (xhr) {
             console.log(xhr)
         }
     })
    }

    function ColoniaGetByIdMunicipio() {
        let ddl = $('#ddlMunicipio').val();
        $.ajax({
            url: "@Url.Action("GetByIdMunicipio", "Usuario")?IdMunicipio=" + ddl,
            type: "GET",
            dataType: "JSON",
            success: function (result) {
                if (result.Correct) {
                    let ddlColonia = $('#ddlColonia');
                    //ddlColonia.html("");
                    ddlColonia.empty();
                    let optionDefault = "<option value=0>Selecciona la colonia</option>";
                    ddlColonia.append(optionDefault);
                    $.each(result.Objects, function (i, valor) {
                        let option = "<option value=" + valor.IdColonia + ">" + valor.Nombre + "</option>";
                        ddlColonia.append(option);
                    })
                }
            },
            error: function (xhr) {
                console.log(xhr)
            }
        })
            }

    function ValidarImagen() {
        //necesito saber la extencion de mi archivo
        //obtener la extension
        //dividir el nombre en 2

        //variqable---id de mi input---indice0---propiedad files indice 0---dividir cuando encuentra un punto---lo convierte a minuscula
        var input = $('#inptFileImagen')[0].files[0].name.split('.').pop().toLowerCase()
        //console.log(input)
        var extensionesValidas = ['png', 'jpg', 'jpeg', 'webp']
        var banderaImg = false

        for (var i = 0; i <= extensionesValidas.length; i++) {
            if (input == extensionesValidas[i]) {
                banderaImg = true
            }
        }

        if (!banderaImg) {
            alert(`Los archivos permitidos deben ser ${extensionesValidas}`)
            //LIMPIAR EL INPUT
            $('#inptFileImagen').val("")
        }
    }

    function VisualizarImagen(input) {
        if (input.files) {
            var reader = new FileReader();
            reader.onload = function (elemento) {
                $('#img').attr('src', elemento.target.result)
            }
            reader.readAsDataURL(input.files[0])
        }
    }

    function ValidarTamanio(input) {
        const fileSize = input.files[0].size / 1024 / 1024;
        //console.log(input)
        if (fileSize > 2) {
            alert("La Imagen no puede superar los 2MB");
            $('#inptFileImagen').val("")
        }
    }

    function SoloLetras(evt) {
        var entrada = String.fromCharCode(evt.which)
        var inputField = evt.target;
        var ErrorMessage = inputField.parentNode.querySelector('.error')
        ErrorMessage.textContent = ' ';
        if (!(/[a-z A-Z]/.test(entrada))) {
            //console.log("no es letra")
            evt.preventDefault()
            inputField.style.borderColor = 'red';
            ErrorMessage.textContent = 'Solo se aceptan letras';
        }
        else {
            //console.log("es letra")
            inputField.style.borderColor = 'green';
        }
    }

    function SoloNumeros(evt) {
        var entrada = String.fromCharCode(evt.which);
        var inputField = evt.target;
        var ErrorMessage = inputField.parentNode.querySelector('.error')
        ErrorMessage.textContent = ' ';
        if (!(/^[0-9]{1,10}$/g.test(entrada))) {
            //console.log("no es letra")
            evt.preventDefault()
            inputField.style.borderColor = 'red';
            ErrorMessage.textContent = 'Solo se aceptan numeros';
        }
        else {
            //console.log("es letra")
            inputField.style.borderColor = 'green';
        }
    }

    //Función para validar una CURP
    function ValidarCurp(curp) {
        var re = /^([A-Z][AEIOUX][A-Z]{2}\d{2}(?:0[1-9]|1[0-2])(?:0[1-9]|[12]\d|3[01])[HM](?:AS|B[CS]|C[CLMSH]|D[FG]|G[TR]|HG|JC|M[CNS]|N[ETL]|OC|PL|Q[TR]|S[PLR]|T[CSL]|VZ|YN|ZS)[B-DF-HJ-NP-TV-Z]{3}[A-Z\d])(\d)$/,
            validado = curp.match(re);

        if (!validado)  //Coincide con el formato general?
            return false;

        //Validar que coincida el dígito verificador
        function digitoVerificador(curp17) {
            //Fuente https://consultas.curp.gob.mx/CurpSP/
            var diccionario = "0123456789ABCDEFGHIJKLMNÑOPQRSTUVWXYZ",
                lngSuma = 0.0,
                lngDigito = 0.0;
            for (var i = 0; i < 17; i++)
                lngSuma = lngSuma + diccionario.indexOf(curp17.charAt(i)) * (18 - i);
            lngDigito = 10 - lngSuma % 10;
            if (lngDigito == 10) return 0;
            return lngDigito;
        }

        if (validado[2] != digitoVerificador(validado[1]))
            return false;

        return true; //Validado
    }

    function validarInput(input) {
        var curp = input.value.toUpperCase(),
            resultado = document.getElementById("resultado"),
            valido = "No válido";

        if (ValidarCurp(curp)) { // ⬅️ Acá se comprueba
            valido = "Válido";
            resultado.classList.add("ok");
        } else {
            resultado.classList.remove("ok");
        }

        resultado.innerText = "CURP: " + curp + "\nFormato: " + valido;
            }

            //$('#email').blur(function () {
            //    var email = $('#email').val();
            //    var ErrorMessage = $('.error');
            //    ErrorMessage.text('');
            //    if (email.trim() === "") {
            //        $('#email').css('border-color', '');
            //        ErrorMessage.text('');
            //    }
            //    else if (!isValidEmail(email)) {
            //        $('#email').css('border-color', 'red');
            //        ErrorMessage.text('Correo no permitido');
            //        ErrorMessage.css('color', 'red');
            //        //$('#email').val('');
            //    } else {
            //        $('#email').css('border-color', 'green');
            //        ErrorMessage.text('');
            //    }
            //});

            //function isValidEmail(email) {
            //    var regex = /^(([^<>()[\]\\.,;:\s@@\"]+(\.[^<>()[\]\\.,;:\s@@\"]+)*)|(\".+\"))@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/
            //    return regex.test(email);
    function ValidarEmail(evt){
        var reg = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/g;
        var ErrorMessage = document.getElementById("emailError");
        ErrorMessage.textContent = '';
        //console.log(ErrorMessage);
        console.log(evt)
        if (reg.test(evt.value) == false) {
            //alert('Invalid Email Address');
            ErrorMessage.textContent = 'Correo no valido';
            evt.style.borderColor = 'red';
            //return false;
        } else {
            ErrorMessage.textContent = '';
            evt.style.borderColor = 'green';
        }

    }
        </script>
